/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: slb.proto */

#ifndef PROTOBUF_C_slb_2eproto__INCLUDED
#define PROTOBUF_C_slb_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _Slb__AddSaReq Slb__AddSaReq;
typedef struct _Slb__DelSaReq Slb__DelSaReq;
typedef struct _Slb__StatusResp Slb__StatusResp;


/* --- enums --- */


/* --- messages --- */

/*
 * todo: new_sa() may call netlink UPDATE_SA, but update_sa()
 * just call del() and new() sa
 */
struct  _Slb__AddSaReq
{
  ProtobufCMessage base;
  ProtobufCBinaryData host_src;
  ProtobufCBinaryData host_dst;
  ProtobufCBinaryData tmpl_host_src;
  ProtobufCBinaryData tmpl_host_dst;
  uint32_t spi;
};
#define SLB__ADD_SA_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&slb__add_sa_req__descriptor) \
    , {0,NULL}, {0,NULL}, {0,NULL}, {0,NULL}, 0 }


struct  _Slb__DelSaReq
{
  ProtobufCMessage base;
  uint32_t spi;
};
#define SLB__DEL_SA_REQ__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&slb__del_sa_req__descriptor) \
    , 0 }


/*
 * The response message containing the greetings
 */
struct  _Slb__StatusResp
{
  ProtobufCMessage base;
  int64_t status;
};
#define SLB__STATUS_RESP__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&slb__status_resp__descriptor) \
    , 0 }


/* Slb__AddSaReq methods */
void   slb__add_sa_req__init
                     (Slb__AddSaReq         *message);
size_t slb__add_sa_req__get_packed_size
                     (const Slb__AddSaReq   *message);
size_t slb__add_sa_req__pack
                     (const Slb__AddSaReq   *message,
                      uint8_t             *out);
size_t slb__add_sa_req__pack_to_buffer
                     (const Slb__AddSaReq   *message,
                      ProtobufCBuffer     *buffer);
Slb__AddSaReq *
       slb__add_sa_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   slb__add_sa_req__free_unpacked
                     (Slb__AddSaReq *message,
                      ProtobufCAllocator *allocator);
/* Slb__DelSaReq methods */
void   slb__del_sa_req__init
                     (Slb__DelSaReq         *message);
size_t slb__del_sa_req__get_packed_size
                     (const Slb__DelSaReq   *message);
size_t slb__del_sa_req__pack
                     (const Slb__DelSaReq   *message,
                      uint8_t             *out);
size_t slb__del_sa_req__pack_to_buffer
                     (const Slb__DelSaReq   *message,
                      ProtobufCBuffer     *buffer);
Slb__DelSaReq *
       slb__del_sa_req__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   slb__del_sa_req__free_unpacked
                     (Slb__DelSaReq *message,
                      ProtobufCAllocator *allocator);
/* Slb__StatusResp methods */
void   slb__status_resp__init
                     (Slb__StatusResp         *message);
size_t slb__status_resp__get_packed_size
                     (const Slb__StatusResp   *message);
size_t slb__status_resp__pack
                     (const Slb__StatusResp   *message,
                      uint8_t             *out);
size_t slb__status_resp__pack_to_buffer
                     (const Slb__StatusResp   *message,
                      ProtobufCBuffer     *buffer);
Slb__StatusResp *
       slb__status_resp__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   slb__status_resp__free_unpacked
                     (Slb__StatusResp *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*Slb__AddSaReq_Closure)
                 (const Slb__AddSaReq *message,
                  void *closure_data);
typedef void (*Slb__DelSaReq_Closure)
                 (const Slb__DelSaReq *message,
                  void *closure_data);
typedef void (*Slb__StatusResp_Closure)
                 (const Slb__StatusResp *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor slb__add_sa_req__descriptor;
extern const ProtobufCMessageDescriptor slb__del_sa_req__descriptor;
extern const ProtobufCMessageDescriptor slb__status_resp__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_slb_2eproto__INCLUDED */
